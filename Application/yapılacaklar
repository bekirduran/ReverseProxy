1. Toml [SSL] altında bir tane enable = true/false değeri olacak ona göre ssl yada sslsiz açacak
2. Filter Kısmı geliştirmesi
2.1 - BODY ILE ilgili geliştirmeler
2.1.1 - Blacklisted body list => şuanda olan, var
2.1.2. - Body replacement => bu olay da var
2.2 - Header ile ilgili geliştrime
 => BODY ile olan herşey burda da var


Request/Response header için Key Check
TokenId = 123456 / bu isteği reddet
request.headers.contains["TokenId"] && tokenId == 123456 ok değilse engelle




#Replacer ve Filter için de olacak
Hem body hem header için regex ile yapılabilir olsun
1. Replace yapıyorsun ama bu replace case-sensitive şuan
3. requestBodyCase = Şuanki sistem böyle çalısıyor.
 request BodyInCase = büyük küçük duyarlılığı olmayacak
 requestBodyRegex = [ , "bubiremail" ] => python regex araştıralacak








 1. SSL seçeneği açılıp/kapatılabilecek. TOML üzerinden --------------TAMAMLANDI

 2. Request/Response Body filter kısmı için 3. Seçenek olacak (Casesensitive-Insensitive,Regex)--------------TAMAMLANDI
 3. Request/Response Body replacer için de aynısı geçerli--------------TAMAMLANDI

 4. Request/Response Header, Check olayı eklenecek. Key Value, headers[key] == value olması bekleniyor.
 Örn Toml ----------------------------------------------------------------TAMAMLANDI
 RequestHeaderCheck = [["TokenId", "123456"],["TestHeader","TestValue"]]

 5. Reverse.py kısmındaki Classlarını farklı python dosyalarına yaz.--------------TAMAMLANDI
 ResponseReplacerManager.py yaz senin classın olsun main.py import ResponseReplaceManager .....--------------TAMAMLANDI
 6. Rule On/Off = RequestBodyFilterRule = True/False RequestHeaderFilter = true/false

 3 Tane Folderın olsun --------------TAMAMLANDI
 1. Client => Client.py --------------TAMAMLANDI
 2. ReverseProxy => Reverse.py ve ayırcakların olsun --------------TAMAMLANDI
 3. Server => Server ve kullandıkları kodlar olacak.

 Ben bu uygulama üzerinden büyük bir dosya post ettiğim de yada server tarafından büyük bir dosya gelirse bu sistem nasıl davra nıyor. Bunun bir araştır.
 Streaming Data Transfer* => Aiohttp tarafında bak buna.